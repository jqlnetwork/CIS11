- Chapter 4, Section 4.10 Programming Exercises: Question 8.
-Using a loop and indexed addressing, write code that rotates the members of a 32-bit integer array 
-forward one position.  The value at the end of the array must wrap around to the first position.  
-For example, the array [10,20,30,40] would be transformed into [40,10,20,30]
- Upload your assignment to GitHub
-
- Email james.wilson@rccd.edu with the url to the source code on GitHub
-
-*** 25 points ***

ExitProcess proto
WriteInt64 proto
Crlf proto

.data
fArray QWORD 10d, 20d, 30d, 40d ; firstArray
lArray QWORD 4 DUP(0)           ; lastArray

.code
main proc
mov ecx, LENGTHOF fArray        ; first make a loop counter equal to the length of the first array.
mov esi, 0
mov r15, 4


; add this to the program
; print out the array numbers
; mov rcx, 4
; mov esi, 0
; start loop
; mov rax, rsi
; mul r15
; mov rdi, rax
; mov rax, lArray[rdi]
; call WriteInt64
; end loop

mov ecx, LENGTH fArray ; same as mov rcx, 4
mov esi, 0 ; source 

PRINTLOOP:
	mov rax, rsi
	mul r15
	mov rdi, rax
	mov rax, lArray[rdi]
	call WriteInt64
LOOP PRINTLOOP
call Crlf

;last value
;loop thru array
;if not last position
;copy current position value to lArray [current position + 1]
;if last position,
;paste current position to first position of lArray

L1:
	mov rax, rsi
	mul r15 ; allows u to move to the next index, but requires instantiation of r15
	mov rdx, fArray[rax]

	cmp esi, 3
	je HandleLast
		mov lArray[rax + 4], rdx
	jmp EndLoop

	HandleLast:
	mov lArray[0], rdx

	EndLoop:
	inc rsi

LOOP L1

	call ExitProcess
main endp
end